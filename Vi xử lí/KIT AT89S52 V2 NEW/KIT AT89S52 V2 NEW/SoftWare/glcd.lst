C51 COMPILER V8.05a   GLCD                                                                 10/07/2015 11:24:02 PAGE 1   


C51 COMPILER V8.05a, COMPILATION OF MODULE GLCD
OBJECT MODULE PLACED IN .\HEX\glcd.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE Device\Source\glcd.c BROWSE INCDIR(..\TESTKIT89S52V2;.\Device\Include;.\Mai
                    -n\Include;.\ProjectLib\Include) DEBUG OBJECTEXTEND PRINT(.\glcd.lst) TABS(2) OBJECT(.\HEX\glcd.obj)

line level    source

   1          /*******************************************************************
   2            * @file     glcd.c
   3            * @author   MinhHaGroup
   4            * @version  V1.0.0
   5            * @date   
   6            * @brief    File cac ham de dieu khien LCD 128x64 mode 8 bit
   7          ********************************************************************/
   8          #include "main.h"
   9          
  10          void lcd_enable()
  11          {
  12   1        LCD_E = 1;
  13   1        delay_us(50);
  14   1        LCD_E = 0;
  15   1        delay_us(30);
  16   1      }
  17          // ==============================================================================
  18          
  19          void write_data_lcd(unsigned char WDLCD)
  20          {
  21   1        delay_us(200);            // LUU Y SU CAN THIET CUA KHOANG THOI GIAN DELAY NAY 
  22   1        LCD_RS = 1;
  23   1        LCD_RW = 0;
  24   1        LCD_Data = WDLCD;
  25   1        lcd_enable();
  26   1      }
  27          
  28          // ==============================================================================
  29          
  30          void write_command_lcd(unsigned char WCLCD) 
  31          {
  32   1        delay_us(200);            // LUU Y SU CAN THIET CUA KHOANG THOI GIAN DELAY NAY 
  33   1        LCD_RS = 0;
  34   1        LCD_RW = 0; 
  35   1        LCD_Data = WCLCD;
  36   1        lcd_enable();
  37   1      }
  38          
  39          // ==============================================================================
  40            
  41          // HAM KHOI TAO LCD ------------------------------------------------
  42          // MODE 8 bit ------------------------------------------------------
  43          void lcd_init(void)
  44          {
  45   1        // Function set
  46   1        write_command_lcd(0x30);          // Chon che do truyen 8 bit
  47   1        delay_us(150);                      // delay > 100us
  48   1        write_command_lcd(0x30);          // Chon che do truyen 8 bit
  49   1        delay_us(50);                       // delay > 37us
  50   1        
  51   1        // Display ON/OFF control
  52   1        write_command_lcd(0x0C);          // Cho phep hien thi ra LCD 128x64
  53   1        delay_us(120);                      // delay > 100us
  54   1        
C51 COMPILER V8.05a   GLCD                                                                 10/07/2015 11:24:02 PAGE 2   

  55   1        // Clear LCD
  56   1        write_command_lcd(0x01);          // Xoa man hinh     
  57   1        delay_ms(40);                       // delay > 10ms
  58   1        
  59   1        // Entry mode set
  60   1        write_command_lcd(0x06);          // Chon che do hien thi ki tu ra man hinh LCD 128x64 (Ki tu sau xuat hien b
             -en phai ki tu truoc)
  61   1      }
  62          // ==============================================================================
  63          
  64          void lcd_clear(void) 
  65          {
  66   1        write_command_lcd(0x01);
  67   1      }
  68          
  69          // ==============================================================================
  70          void lcd_putchar(unsigned char X, unsigned char Y, unsigned char DData)
  71          {
  72   1        if(Y<1)
  73   1          Y=1;
  74   1        if(Y>4)
  75   1          Y=4;
  76   1        X &= 0x0F; 
  77   1        switch(Y)
  78   1        {
  79   2          case 1:X|=0X80;break;
  80   2          case 2:X|=0X90;break;
  81   2          case 3:X|=0X88;break;
  82   2          case 4:X|=0X98;break;
  83   2        }
  84   1        write_command_lcd(X); 
  85   1        write_data_lcd(DData);
  86   1      }
  87          // ==============================================================================
  88          void lcd_puts(unsigned char X, unsigned char Y, unsigned char *DData)
  89          {
  90   1        unsigned char ListLength,X2;
  91   1      
  92   1        ListLength = 0;
  93   1        X2=X;
  94   1        if(Y<1)
  95   1          Y=1;
  96   1        if(Y>4)
  97   1          Y=4;
  98   1        X &= 0x0F; 
  99   1        switch(Y)
 100   1        {
 101   2          case 1:X2|=0X80;break;  
 102   2          case 2:X2|=0X90;break;
 103   2          case 3:X2|=0X88;break;
 104   2          case 4:X2|=0X98;break;
 105   2        }
 106   1        write_command_lcd(X2); 
 107   1        while (DData[ListLength]>=0x20) 
 108   1        {
 109   2          if (X <= 0x0F) 
 110   2          {
 111   3            write_data_lcd(DData[ListLength]);
 112   3            ListLength++;
 113   3            X++;
 114   3            delay_ms(5);
 115   3          }
C51 COMPILER V8.05a   GLCD                                                                 10/07/2015 11:24:02 PAGE 3   

 116   2        }
 117   1      }
 118          // ==============================================================================
 119          /*
 120          void lcd_display_image  (unsigned char *DData)
 121          {
 122            unsigned char x,y,i;
 123            unsigned int tmp=0;
 124            for(i=0;i<9;)
 125            {   
 126              for(x=0;x<32;x++)
 127              {       
 128                write_command_lcd(0x34);
 129                write_command_lcd((0x80+x));
 130                write_command_lcd((0x80+i));  
 131                write_command_lcd(0x30);    
 132                for(y=0;y<16;y++) 
 133                  write_data_lcd(DData[tmp+y]);
 134                tmp+=16;    
 135              }
 136              i+=8;
 137            }
 138              write_command_lcd(0x36);  
 139              write_command_lcd(0x30);
 140          }
 141          */
 142          /* -----------------END OF FILE---------------------------- */
 143          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    287    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       8
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
